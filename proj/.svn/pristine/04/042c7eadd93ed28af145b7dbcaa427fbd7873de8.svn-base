\hypertarget{mouse_8h}{}\section{mouse.\+h File Reference}
\label{mouse_8h}\index{mouse.\+h@{mouse.\+h}}


responsible for everything related to the mouse  


{\ttfamily \#include \char`\"{}Sprite.\+h\char`\"{}}\newline
{\ttfamily \#include $<$stdbool.\+h$>$}\newline
{\ttfamily \#include $<$stdint.\+h$>$}\newline
Include dependency graph for mouse.\+h\+:
\nopagebreak
\begin{figure}[H]
\begin{center}
\leavevmode
\includegraphics[width=350pt]{mouse_8h__incl}
\end{center}
\end{figure}
This graph shows which files directly or indirectly include this file\+:
\nopagebreak
\begin{figure}[H]
\begin{center}
\leavevmode
\includegraphics[width=350pt]{mouse_8h__dep__incl}
\end{center}
\end{figure}
\subsection*{Classes}
\begin{DoxyCompactItemize}
\item 
struct \hyperlink{structMouse}{Mouse}
\begin{DoxyCompactList}\small\item\em Struct containg all the information related to the mouse. \end{DoxyCompactList}\end{DoxyCompactItemize}
\subsection*{Macros}
\begin{DoxyCompactItemize}
\item 
\#define \hyperlink{mouse_8h_ac584bf6da2a39394f5d72fa9087ea24b}{D\+I\+S\+A\+B\+L\+E\+\_\+\+M\+O\+U\+S\+E\+\_\+\+B\+Y\+TE}~0x\+A7
\item 
\#define \hyperlink{mouse_8h_acb6e5fa437221ac9c430658954b1d3c3}{M\+O\+U\+S\+E\+\_\+\+S\+T\+A\+R\+T\+\_\+\+P\+O\+S\+I\+T\+I\+ON}~300
\item 
\#define \hyperlink{mouse_8h_a50465b84f53615a3813eb69291f2fcb1}{E\+N\+A\+B\+L\+E\+\_\+\+M\+O\+U\+S\+E\+\_\+\+B\+Y\+TE}~0x\+A8
\item 
\#define \hyperlink{mouse_8h_a2a4d1bee423a3756e59bd242433a6b5a}{C\+H\+E\+C\+K\+\_\+\+M\+O\+U\+S\+E\+\_\+\+I\+N\+T\+E\+R\+F\+A\+C\+E\+\_\+\+B\+Y\+TE}~0x\+A8
\item 
\#define \hyperlink{mouse_8h_a0fcdbd39ed7dcf62fede44082d09cb7a}{W\+R\+I\+T\+E\+\_\+\+B\+Y\+T\+E\+\_\+\+T\+O\+\_\+\+M\+O\+U\+SE}~0x\+D4
\item 
\#define \hyperlink{mouse_8h_ac584bf6da2a39394f5d72fa9087ea24b}{D\+I\+S\+A\+B\+L\+E\+\_\+\+M\+O\+U\+S\+E\+\_\+\+B\+Y\+TE}~0x\+A7
\item 
\#define \hyperlink{mouse_8h_a85964cb90343bb1a029b1d1b4229f910}{M\+O\+U\+S\+E\+\_\+\+I\+RQ}~12
\item 
\#define \hyperlink{mouse_8h_a406990532f617eb5e6405d7a88be7432}{M\+O\+U\+S\+E\+\_\+\+E\+V\+E\+NT}~B\+IT(0)
\end{DoxyCompactItemize}
\subsection*{Functions}
\begin{DoxyCompactItemize}
\item 
\hyperlink{structMouse}{Mouse} $\ast$ \hyperlink{mouse_8h_a746cb478532b016b28ad06f8e03b22bc}{create\+\_\+mouse} ()
\begin{DoxyCompactList}\small\item\em Create a mouse object. \end{DoxyCompactList}\item 
int \hyperlink{mouse_8h_a45dc77b0600161f8d821d5e758aa8d88}{mouse\+\_\+subscribe} (uint8\+\_\+t $\ast$bit\+\_\+no)
\begin{DoxyCompactList}\small\item\em Subscribe the interrupts of the mouse. \end{DoxyCompactList}\item 
int \hyperlink{mouse_8h_abb62339e13d96f9050f69a71428f8eb9}{mouse\+\_\+unsubscribe} ()
\begin{DoxyCompactList}\small\item\em Unsubscribe the interrupts of the mouse. \end{DoxyCompactList}\item 
void \hyperlink{mouse_8h_acbc1b5c21b7dfa3f4bde746667b3b3b2}{packet\+\_\+byte\+\_\+handler} (int $\ast$position, uint8\+\_\+t bytes\mbox{[}3\mbox{]})
\begin{DoxyCompactList}\small\item\em Saves the byte received from the mouse into an array of bytes. \end{DoxyCompactList}\item 
void \hyperlink{mouse_8h_aed5e0cdccd09938aab783602cb657331}{packet\+\_\+handler} (struct packet $\ast$pp, uint8\+\_\+t packet\mbox{[}3\mbox{]})
\begin{DoxyCompactList}\small\item\em Saves the informatin of a packet sent by the mouse into a struct. \end{DoxyCompactList}\item 
int \hyperlink{mouse_8h_a8f2981a74d75d33c2e4bec9a93314711}{mouse\+\_\+send\+\_\+command} (uint8\+\_\+t command)
\begin{DoxyCompactList}\small\item\em Sends a command to the mouse controller. \end{DoxyCompactList}\item 
void \hyperlink{mouse_8h_a92e15de5ff284887d84010dec166c684}{mouse\+\_\+enable\+\_\+interrupts} ()
\begin{DoxyCompactList}\small\item\em Enables the mouse interrupts. \end{DoxyCompactList}\item 
void \hyperlink{mouse_8h_aea10ce450ff0807b0a151bbd930af51c}{mouse\+\_\+disable\+\_\+interrupts} ()
\begin{DoxyCompactList}\small\item\em Disables the mouse interrupts. \end{DoxyCompactList}\item 
int \hyperlink{mouse_8h_a0f9e6b0c9d8f68dada2f0c9bb56a7e6f}{mouse\+\_\+flush\+\_\+\+O\+BF} ()
\begin{DoxyCompactList}\small\item\em Flushes the mouse O\+BF. \end{DoxyCompactList}\item 
int \hyperlink{mouse_8h_a0706b44aae98189c8b9330d8c259cdd6}{reset\+\_\+\+K\+B\+C\+\_\+command\+\_\+byte} (uint8\+\_\+t byte)
\begin{DoxyCompactList}\small\item\em Resets the controller command byte. \end{DoxyCompactList}\item 
int \hyperlink{mouse_8h_afa2d1d26c3b833ddc82ba44d1700f094}{check\+\_\+if\+\_\+\+I\+B\+F\+\_\+full} ()
\begin{DoxyCompactList}\small\item\em Checks if the I\+BF is full. \end{DoxyCompactList}\item 
void \hyperlink{mouse_8h_a3912f46409af7da093ddd4bbbb91930a}{mouse\+\_\+actions\+\_\+analyser} (struct mouse\+\_\+ev $\ast$mouse\+\_\+event)
\begin{DoxyCompactList}\small\item\em Analyses the mouse events and acts on them. \end{DoxyCompactList}\item 
void \hyperlink{mouse_8h_ae0e722e1e3878b0ecdd7b485b4b44792}{mouse\+\_\+handler} (int $\ast$position, uint8\+\_\+t packet\mbox{[}3\mbox{]})
\begin{DoxyCompactList}\small\item\em Handles the mouse interrupts and acts on them. \end{DoxyCompactList}\item 
void \hyperlink{mouse_8h_ac0d90e1b25f00bb1969e4966e265e03d}{update\+\_\+mouse\+\_\+position} (struct packet pp)
\begin{DoxyCompactList}\small\item\em updates the mouse position based on the information received \end{DoxyCompactList}\item 
struct mouse\+\_\+ev \hyperlink{mouse_8h_ac0bcec0b1fd2734eb5ae269361180366}{mouse\+\_\+event\+\_\+detector} (struct packet $\ast$pp, uint8\+\_\+t $\ast$event)
\begin{DoxyCompactList}\small\item\em Detects wheter an event as occured or not, based on the information sent bye th mouse. \end{DoxyCompactList}\item 
bool \hyperlink{mouse_8h_a1d896c3172a19ca6777d49723c641c75}{mouse\+\_\+over\+\_\+img} (\hyperlink{structSprite}{Sprite} $\ast$sprite)
\begin{DoxyCompactList}\small\item\em Checks if the mouse is over a given image. \end{DoxyCompactList}\item 
bool \hyperlink{mouse_8h_afd31dd4a6dff655543bd26091a34ea16}{mouse\+\_\+over\+\_\+coop\+\_\+option} ()
\begin{DoxyCompactList}\small\item\em Checks if the mouse is over the Co-\/\+Op option in the menu. \end{DoxyCompactList}\item 
bool \hyperlink{mouse_8h_a23b01b6f552adaddb4feb0c192c95333}{mouse\+\_\+over\+\_\+1player\+\_\+option} ()
\begin{DoxyCompactList}\small\item\em Checks if the mouse is over the 1 Player option in the menu. \end{DoxyCompactList}\item 
void \hyperlink{mouse_8h_af3c9525efdbd26f95704c0cae843732d}{destroy\+\_\+mouse} (\hyperlink{structMouse}{Mouse} $\ast$$\ast$mouse)
\begin{DoxyCompactList}\small\item\em Destroy mouse object. \end{DoxyCompactList}\end{DoxyCompactItemize}


\subsection{Detailed Description}
responsible for everything related to the mouse 

\begin{DoxyAuthor}{Author}
Bernardo Ramalho \& Tiago Alves 
\end{DoxyAuthor}
\begin{DoxyVersion}{Version}
0.\+1 
\end{DoxyVersion}
\begin{DoxyDate}{Date}
2020-\/01-\/06
\end{DoxyDate}
\begin{DoxyCopyright}{Copyright}
Copyright (c) 2020 
\end{DoxyCopyright}


\subsection{Macro Definition Documentation}
\mbox{\Hypertarget{mouse_8h_a2a4d1bee423a3756e59bd242433a6b5a}\label{mouse_8h_a2a4d1bee423a3756e59bd242433a6b5a}} 
\index{mouse.\+h@{mouse.\+h}!C\+H\+E\+C\+K\+\_\+\+M\+O\+U\+S\+E\+\_\+\+I\+N\+T\+E\+R\+F\+A\+C\+E\+\_\+\+B\+Y\+TE@{C\+H\+E\+C\+K\+\_\+\+M\+O\+U\+S\+E\+\_\+\+I\+N\+T\+E\+R\+F\+A\+C\+E\+\_\+\+B\+Y\+TE}}
\index{C\+H\+E\+C\+K\+\_\+\+M\+O\+U\+S\+E\+\_\+\+I\+N\+T\+E\+R\+F\+A\+C\+E\+\_\+\+B\+Y\+TE@{C\+H\+E\+C\+K\+\_\+\+M\+O\+U\+S\+E\+\_\+\+I\+N\+T\+E\+R\+F\+A\+C\+E\+\_\+\+B\+Y\+TE}!mouse.\+h@{mouse.\+h}}
\subsubsection{\texorpdfstring{C\+H\+E\+C\+K\+\_\+\+M\+O\+U\+S\+E\+\_\+\+I\+N\+T\+E\+R\+F\+A\+C\+E\+\_\+\+B\+Y\+TE}{CHECK\_MOUSE\_INTERFACE\_BYTE}}
{\footnotesize\ttfamily \#define C\+H\+E\+C\+K\+\_\+\+M\+O\+U\+S\+E\+\_\+\+I\+N\+T\+E\+R\+F\+A\+C\+E\+\_\+\+B\+Y\+TE~0x\+A8}

\mbox{\Hypertarget{mouse_8h_ac584bf6da2a39394f5d72fa9087ea24b}\label{mouse_8h_ac584bf6da2a39394f5d72fa9087ea24b}} 
\index{mouse.\+h@{mouse.\+h}!D\+I\+S\+A\+B\+L\+E\+\_\+\+M\+O\+U\+S\+E\+\_\+\+B\+Y\+TE@{D\+I\+S\+A\+B\+L\+E\+\_\+\+M\+O\+U\+S\+E\+\_\+\+B\+Y\+TE}}
\index{D\+I\+S\+A\+B\+L\+E\+\_\+\+M\+O\+U\+S\+E\+\_\+\+B\+Y\+TE@{D\+I\+S\+A\+B\+L\+E\+\_\+\+M\+O\+U\+S\+E\+\_\+\+B\+Y\+TE}!mouse.\+h@{mouse.\+h}}
\subsubsection{\texorpdfstring{D\+I\+S\+A\+B\+L\+E\+\_\+\+M\+O\+U\+S\+E\+\_\+\+B\+Y\+TE}{DISABLE\_MOUSE\_BYTE}\hspace{0.1cm}{\footnotesize\ttfamily [1/2]}}
{\footnotesize\ttfamily \#define D\+I\+S\+A\+B\+L\+E\+\_\+\+M\+O\+U\+S\+E\+\_\+\+B\+Y\+TE~0x\+A7}

\mbox{\Hypertarget{mouse_8h_ac584bf6da2a39394f5d72fa9087ea24b}\label{mouse_8h_ac584bf6da2a39394f5d72fa9087ea24b}} 
\index{mouse.\+h@{mouse.\+h}!D\+I\+S\+A\+B\+L\+E\+\_\+\+M\+O\+U\+S\+E\+\_\+\+B\+Y\+TE@{D\+I\+S\+A\+B\+L\+E\+\_\+\+M\+O\+U\+S\+E\+\_\+\+B\+Y\+TE}}
\index{D\+I\+S\+A\+B\+L\+E\+\_\+\+M\+O\+U\+S\+E\+\_\+\+B\+Y\+TE@{D\+I\+S\+A\+B\+L\+E\+\_\+\+M\+O\+U\+S\+E\+\_\+\+B\+Y\+TE}!mouse.\+h@{mouse.\+h}}
\subsubsection{\texorpdfstring{D\+I\+S\+A\+B\+L\+E\+\_\+\+M\+O\+U\+S\+E\+\_\+\+B\+Y\+TE}{DISABLE\_MOUSE\_BYTE}\hspace{0.1cm}{\footnotesize\ttfamily [2/2]}}
{\footnotesize\ttfamily \#define D\+I\+S\+A\+B\+L\+E\+\_\+\+M\+O\+U\+S\+E\+\_\+\+B\+Y\+TE~0x\+A7}

\mbox{\Hypertarget{mouse_8h_a50465b84f53615a3813eb69291f2fcb1}\label{mouse_8h_a50465b84f53615a3813eb69291f2fcb1}} 
\index{mouse.\+h@{mouse.\+h}!E\+N\+A\+B\+L\+E\+\_\+\+M\+O\+U\+S\+E\+\_\+\+B\+Y\+TE@{E\+N\+A\+B\+L\+E\+\_\+\+M\+O\+U\+S\+E\+\_\+\+B\+Y\+TE}}
\index{E\+N\+A\+B\+L\+E\+\_\+\+M\+O\+U\+S\+E\+\_\+\+B\+Y\+TE@{E\+N\+A\+B\+L\+E\+\_\+\+M\+O\+U\+S\+E\+\_\+\+B\+Y\+TE}!mouse.\+h@{mouse.\+h}}
\subsubsection{\texorpdfstring{E\+N\+A\+B\+L\+E\+\_\+\+M\+O\+U\+S\+E\+\_\+\+B\+Y\+TE}{ENABLE\_MOUSE\_BYTE}}
{\footnotesize\ttfamily \#define E\+N\+A\+B\+L\+E\+\_\+\+M\+O\+U\+S\+E\+\_\+\+B\+Y\+TE~0x\+A8}

\mbox{\Hypertarget{mouse_8h_a406990532f617eb5e6405d7a88be7432}\label{mouse_8h_a406990532f617eb5e6405d7a88be7432}} 
\index{mouse.\+h@{mouse.\+h}!M\+O\+U\+S\+E\+\_\+\+E\+V\+E\+NT@{M\+O\+U\+S\+E\+\_\+\+E\+V\+E\+NT}}
\index{M\+O\+U\+S\+E\+\_\+\+E\+V\+E\+NT@{M\+O\+U\+S\+E\+\_\+\+E\+V\+E\+NT}!mouse.\+h@{mouse.\+h}}
\subsubsection{\texorpdfstring{M\+O\+U\+S\+E\+\_\+\+E\+V\+E\+NT}{MOUSE\_EVENT}}
{\footnotesize\ttfamily \#define M\+O\+U\+S\+E\+\_\+\+E\+V\+E\+NT~B\+IT(0)}

\mbox{\Hypertarget{mouse_8h_a85964cb90343bb1a029b1d1b4229f910}\label{mouse_8h_a85964cb90343bb1a029b1d1b4229f910}} 
\index{mouse.\+h@{mouse.\+h}!M\+O\+U\+S\+E\+\_\+\+I\+RQ@{M\+O\+U\+S\+E\+\_\+\+I\+RQ}}
\index{M\+O\+U\+S\+E\+\_\+\+I\+RQ@{M\+O\+U\+S\+E\+\_\+\+I\+RQ}!mouse.\+h@{mouse.\+h}}
\subsubsection{\texorpdfstring{M\+O\+U\+S\+E\+\_\+\+I\+RQ}{MOUSE\_IRQ}}
{\footnotesize\ttfamily \#define M\+O\+U\+S\+E\+\_\+\+I\+RQ~12}

\mbox{\Hypertarget{mouse_8h_acb6e5fa437221ac9c430658954b1d3c3}\label{mouse_8h_acb6e5fa437221ac9c430658954b1d3c3}} 
\index{mouse.\+h@{mouse.\+h}!M\+O\+U\+S\+E\+\_\+\+S\+T\+A\+R\+T\+\_\+\+P\+O\+S\+I\+T\+I\+ON@{M\+O\+U\+S\+E\+\_\+\+S\+T\+A\+R\+T\+\_\+\+P\+O\+S\+I\+T\+I\+ON}}
\index{M\+O\+U\+S\+E\+\_\+\+S\+T\+A\+R\+T\+\_\+\+P\+O\+S\+I\+T\+I\+ON@{M\+O\+U\+S\+E\+\_\+\+S\+T\+A\+R\+T\+\_\+\+P\+O\+S\+I\+T\+I\+ON}!mouse.\+h@{mouse.\+h}}
\subsubsection{\texorpdfstring{M\+O\+U\+S\+E\+\_\+\+S\+T\+A\+R\+T\+\_\+\+P\+O\+S\+I\+T\+I\+ON}{MOUSE\_START\_POSITION}}
{\footnotesize\ttfamily \#define M\+O\+U\+S\+E\+\_\+\+S\+T\+A\+R\+T\+\_\+\+P\+O\+S\+I\+T\+I\+ON~300}

\mbox{\Hypertarget{mouse_8h_a0fcdbd39ed7dcf62fede44082d09cb7a}\label{mouse_8h_a0fcdbd39ed7dcf62fede44082d09cb7a}} 
\index{mouse.\+h@{mouse.\+h}!W\+R\+I\+T\+E\+\_\+\+B\+Y\+T\+E\+\_\+\+T\+O\+\_\+\+M\+O\+U\+SE@{W\+R\+I\+T\+E\+\_\+\+B\+Y\+T\+E\+\_\+\+T\+O\+\_\+\+M\+O\+U\+SE}}
\index{W\+R\+I\+T\+E\+\_\+\+B\+Y\+T\+E\+\_\+\+T\+O\+\_\+\+M\+O\+U\+SE@{W\+R\+I\+T\+E\+\_\+\+B\+Y\+T\+E\+\_\+\+T\+O\+\_\+\+M\+O\+U\+SE}!mouse.\+h@{mouse.\+h}}
\subsubsection{\texorpdfstring{W\+R\+I\+T\+E\+\_\+\+B\+Y\+T\+E\+\_\+\+T\+O\+\_\+\+M\+O\+U\+SE}{WRITE\_BYTE\_TO\_MOUSE}}
{\footnotesize\ttfamily \#define W\+R\+I\+T\+E\+\_\+\+B\+Y\+T\+E\+\_\+\+T\+O\+\_\+\+M\+O\+U\+SE~0x\+D4}



\subsection{Function Documentation}
\mbox{\Hypertarget{mouse_8h_afa2d1d26c3b833ddc82ba44d1700f094}\label{mouse_8h_afa2d1d26c3b833ddc82ba44d1700f094}} 
\index{mouse.\+h@{mouse.\+h}!check\+\_\+if\+\_\+\+I\+B\+F\+\_\+full@{check\+\_\+if\+\_\+\+I\+B\+F\+\_\+full}}
\index{check\+\_\+if\+\_\+\+I\+B\+F\+\_\+full@{check\+\_\+if\+\_\+\+I\+B\+F\+\_\+full}!mouse.\+h@{mouse.\+h}}
\subsubsection{\texorpdfstring{check\+\_\+if\+\_\+\+I\+B\+F\+\_\+full()}{check\_if\_IBF\_full()}}
{\footnotesize\ttfamily int check\+\_\+if\+\_\+\+I\+B\+F\+\_\+full (\begin{DoxyParamCaption}{ }\end{DoxyParamCaption})}



Checks if the I\+BF is full. 

\begin{DoxyReturn}{Returns}
int -\/ 0 if no of 1 if yes 
\end{DoxyReturn}
Here is the call graph for this function\+:
\nopagebreak
\begin{figure}[H]
\begin{center}
\leavevmode
\includegraphics[width=276pt]{mouse_8h_afa2d1d26c3b833ddc82ba44d1700f094_cgraph}
\end{center}
\end{figure}
\mbox{\Hypertarget{mouse_8h_a746cb478532b016b28ad06f8e03b22bc}\label{mouse_8h_a746cb478532b016b28ad06f8e03b22bc}} 
\index{mouse.\+h@{mouse.\+h}!create\+\_\+mouse@{create\+\_\+mouse}}
\index{create\+\_\+mouse@{create\+\_\+mouse}!mouse.\+h@{mouse.\+h}}
\subsubsection{\texorpdfstring{create\+\_\+mouse()}{create\_mouse()}}
{\footnotesize\ttfamily \hyperlink{structMouse}{Mouse}$\ast$ create\+\_\+mouse (\begin{DoxyParamCaption}{ }\end{DoxyParamCaption})}



Create a mouse object. 

\begin{DoxyReturn}{Returns}
Mouse$\ast$ -\/ pointer to the mouse just created 
\end{DoxyReturn}
Here is the call graph for this function\+:
\nopagebreak
\begin{figure}[H]
\begin{center}
\leavevmode
\includegraphics[width=350pt]{mouse_8h_a746cb478532b016b28ad06f8e03b22bc_cgraph}
\end{center}
\end{figure}
\mbox{\Hypertarget{mouse_8h_af3c9525efdbd26f95704c0cae843732d}\label{mouse_8h_af3c9525efdbd26f95704c0cae843732d}} 
\index{mouse.\+h@{mouse.\+h}!destroy\+\_\+mouse@{destroy\+\_\+mouse}}
\index{destroy\+\_\+mouse@{destroy\+\_\+mouse}!mouse.\+h@{mouse.\+h}}
\subsubsection{\texorpdfstring{destroy\+\_\+mouse()}{destroy\_mouse()}}
{\footnotesize\ttfamily void destroy\+\_\+mouse (\begin{DoxyParamCaption}\item[{\hyperlink{structMouse}{Mouse} $\ast$$\ast$}]{mouse }\end{DoxyParamCaption})}



Destroy mouse object. 


\begin{DoxyParams}{Parameters}
{\em mouse} & -\/ object to be destroyed \\
\hline
\end{DoxyParams}
\mbox{\Hypertarget{mouse_8h_a3912f46409af7da093ddd4bbbb91930a}\label{mouse_8h_a3912f46409af7da093ddd4bbbb91930a}} 
\index{mouse.\+h@{mouse.\+h}!mouse\+\_\+actions\+\_\+analyser@{mouse\+\_\+actions\+\_\+analyser}}
\index{mouse\+\_\+actions\+\_\+analyser@{mouse\+\_\+actions\+\_\+analyser}!mouse.\+h@{mouse.\+h}}
\subsubsection{\texorpdfstring{mouse\+\_\+actions\+\_\+analyser()}{mouse\_actions\_analyser()}}
{\footnotesize\ttfamily void mouse\+\_\+actions\+\_\+analyser (\begin{DoxyParamCaption}\item[{struct mouse\+\_\+ev $\ast$}]{mouse\+\_\+event }\end{DoxyParamCaption})}



Analyses the mouse events and acts on them. 


\begin{DoxyParams}{Parameters}
{\em mouse\+\_\+event} & -\/ struct containing the information of the mouse event \\
\hline
\end{DoxyParams}
Here is the call graph for this function\+:
\nopagebreak
\begin{figure}[H]
\begin{center}
\leavevmode
\includegraphics[width=350pt]{mouse_8h_a3912f46409af7da093ddd4bbbb91930a_cgraph}
\end{center}
\end{figure}
\mbox{\Hypertarget{mouse_8h_aea10ce450ff0807b0a151bbd930af51c}\label{mouse_8h_aea10ce450ff0807b0a151bbd930af51c}} 
\index{mouse.\+h@{mouse.\+h}!mouse\+\_\+disable\+\_\+interrupts@{mouse\+\_\+disable\+\_\+interrupts}}
\index{mouse\+\_\+disable\+\_\+interrupts@{mouse\+\_\+disable\+\_\+interrupts}!mouse.\+h@{mouse.\+h}}
\subsubsection{\texorpdfstring{mouse\+\_\+disable\+\_\+interrupts()}{mouse\_disable\_interrupts()}}
{\footnotesize\ttfamily void mouse\+\_\+disable\+\_\+interrupts (\begin{DoxyParamCaption}{ }\end{DoxyParamCaption})}



Disables the mouse interrupts. 

\mbox{\Hypertarget{mouse_8h_a92e15de5ff284887d84010dec166c684}\label{mouse_8h_a92e15de5ff284887d84010dec166c684}} 
\index{mouse.\+h@{mouse.\+h}!mouse\+\_\+enable\+\_\+interrupts@{mouse\+\_\+enable\+\_\+interrupts}}
\index{mouse\+\_\+enable\+\_\+interrupts@{mouse\+\_\+enable\+\_\+interrupts}!mouse.\+h@{mouse.\+h}}
\subsubsection{\texorpdfstring{mouse\+\_\+enable\+\_\+interrupts()}{mouse\_enable\_interrupts()}}
{\footnotesize\ttfamily void mouse\+\_\+enable\+\_\+interrupts (\begin{DoxyParamCaption}{ }\end{DoxyParamCaption})}



Enables the mouse interrupts. 

\mbox{\Hypertarget{mouse_8h_ac0bcec0b1fd2734eb5ae269361180366}\label{mouse_8h_ac0bcec0b1fd2734eb5ae269361180366}} 
\index{mouse.\+h@{mouse.\+h}!mouse\+\_\+event\+\_\+detector@{mouse\+\_\+event\+\_\+detector}}
\index{mouse\+\_\+event\+\_\+detector@{mouse\+\_\+event\+\_\+detector}!mouse.\+h@{mouse.\+h}}
\subsubsection{\texorpdfstring{mouse\+\_\+event\+\_\+detector()}{mouse\_event\_detector()}}
{\footnotesize\ttfamily struct mouse\+\_\+ev mouse\+\_\+event\+\_\+detector (\begin{DoxyParamCaption}\item[{struct packet $\ast$}]{pp,  }\item[{uint8\+\_\+t $\ast$}]{event }\end{DoxyParamCaption})}



Detects wheter an event as occured or not, based on the information sent bye th mouse. 


\begin{DoxyParams}{Parameters}
{\em pp} & -\/ struct containing the information sent be the mouse \\
\hline
{\em event} & -\/ represents place to save the mouse event that occured \\
\hline
\end{DoxyParams}
\begin{DoxyReturn}{Returns}
struct mouse\+\_\+ev -\/ struct containg all the information of the mouse event 
\end{DoxyReturn}
\mbox{\Hypertarget{mouse_8h_a0f9e6b0c9d8f68dada2f0c9bb56a7e6f}\label{mouse_8h_a0f9e6b0c9d8f68dada2f0c9bb56a7e6f}} 
\index{mouse.\+h@{mouse.\+h}!mouse\+\_\+flush\+\_\+\+O\+BF@{mouse\+\_\+flush\+\_\+\+O\+BF}}
\index{mouse\+\_\+flush\+\_\+\+O\+BF@{mouse\+\_\+flush\+\_\+\+O\+BF}!mouse.\+h@{mouse.\+h}}
\subsubsection{\texorpdfstring{mouse\+\_\+flush\+\_\+\+O\+B\+F()}{mouse\_flush\_OBF()}}
{\footnotesize\ttfamily int mouse\+\_\+flush\+\_\+\+O\+BF (\begin{DoxyParamCaption}{ }\end{DoxyParamCaption})}



Flushes the mouse O\+BF. 

\begin{DoxyReturn}{Returns}
int -\/ 0 if sucess or 1 if error 
\end{DoxyReturn}
Here is the call graph for this function\+:
\nopagebreak
\begin{figure}[H]
\begin{center}
\leavevmode
\includegraphics[width=282pt]{mouse_8h_a0f9e6b0c9d8f68dada2f0c9bb56a7e6f_cgraph}
\end{center}
\end{figure}
\mbox{\Hypertarget{mouse_8h_ae0e722e1e3878b0ecdd7b485b4b44792}\label{mouse_8h_ae0e722e1e3878b0ecdd7b485b4b44792}} 
\index{mouse.\+h@{mouse.\+h}!mouse\+\_\+handler@{mouse\+\_\+handler}}
\index{mouse\+\_\+handler@{mouse\+\_\+handler}!mouse.\+h@{mouse.\+h}}
\subsubsection{\texorpdfstring{mouse\+\_\+handler()}{mouse\_handler()}}
{\footnotesize\ttfamily void mouse\+\_\+handler (\begin{DoxyParamCaption}\item[{int $\ast$}]{position,  }\item[{uint8\+\_\+t}]{packet\mbox{[}3\mbox{]} }\end{DoxyParamCaption})}



Handles the mouse interrupts and acts on them. 


\begin{DoxyParams}{Parameters}
{\em position} & -\/ index of the packet byte in the array \\
\hline
{\em packet} & -\/ array containing the packets bytes \\
\hline
\end{DoxyParams}
Here is the call graph for this function\+:
\nopagebreak
\begin{figure}[H]
\begin{center}
\leavevmode
\includegraphics[width=350pt]{mouse_8h_ae0e722e1e3878b0ecdd7b485b4b44792_cgraph}
\end{center}
\end{figure}
\mbox{\Hypertarget{mouse_8h_a23b01b6f552adaddb4feb0c192c95333}\label{mouse_8h_a23b01b6f552adaddb4feb0c192c95333}} 
\index{mouse.\+h@{mouse.\+h}!mouse\+\_\+over\+\_\+1player\+\_\+option@{mouse\+\_\+over\+\_\+1player\+\_\+option}}
\index{mouse\+\_\+over\+\_\+1player\+\_\+option@{mouse\+\_\+over\+\_\+1player\+\_\+option}!mouse.\+h@{mouse.\+h}}
\subsubsection{\texorpdfstring{mouse\+\_\+over\+\_\+1player\+\_\+option()}{mouse\_over\_1player\_option()}}
{\footnotesize\ttfamily bool mouse\+\_\+over\+\_\+1player\+\_\+option (\begin{DoxyParamCaption}{ }\end{DoxyParamCaption})}



Checks if the mouse is over the 1 Player option in the menu. 

\begin{DoxyReturn}{Returns}
true -\/ if the mouse is over the 1 Player option 

false -\/ if the mouse is not over the 1 Player option 
\end{DoxyReturn}
Here is the call graph for this function\+:
\nopagebreak
\begin{figure}[H]
\begin{center}
\leavevmode
\includegraphics[width=328pt]{mouse_8h_a23b01b6f552adaddb4feb0c192c95333_cgraph}
\end{center}
\end{figure}
\mbox{\Hypertarget{mouse_8h_afd31dd4a6dff655543bd26091a34ea16}\label{mouse_8h_afd31dd4a6dff655543bd26091a34ea16}} 
\index{mouse.\+h@{mouse.\+h}!mouse\+\_\+over\+\_\+coop\+\_\+option@{mouse\+\_\+over\+\_\+coop\+\_\+option}}
\index{mouse\+\_\+over\+\_\+coop\+\_\+option@{mouse\+\_\+over\+\_\+coop\+\_\+option}!mouse.\+h@{mouse.\+h}}
\subsubsection{\texorpdfstring{mouse\+\_\+over\+\_\+coop\+\_\+option()}{mouse\_over\_coop\_option()}}
{\footnotesize\ttfamily bool mouse\+\_\+over\+\_\+coop\+\_\+option (\begin{DoxyParamCaption}{ }\end{DoxyParamCaption})}



Checks if the mouse is over the Co-\/\+Op option in the menu. 

\begin{DoxyReturn}{Returns}
true -\/ if the mouse is over the co-\/op option 

false -\/ if the mouse is not over the co-\/op option 
\end{DoxyReturn}
Here is the call graph for this function\+:
\nopagebreak
\begin{figure}[H]
\begin{center}
\leavevmode
\includegraphics[width=349pt]{mouse_8h_afd31dd4a6dff655543bd26091a34ea16_cgraph}
\end{center}
\end{figure}
\mbox{\Hypertarget{mouse_8h_a1d896c3172a19ca6777d49723c641c75}\label{mouse_8h_a1d896c3172a19ca6777d49723c641c75}} 
\index{mouse.\+h@{mouse.\+h}!mouse\+\_\+over\+\_\+img@{mouse\+\_\+over\+\_\+img}}
\index{mouse\+\_\+over\+\_\+img@{mouse\+\_\+over\+\_\+img}!mouse.\+h@{mouse.\+h}}
\subsubsection{\texorpdfstring{mouse\+\_\+over\+\_\+img()}{mouse\_over\_img()}}
{\footnotesize\ttfamily bool mouse\+\_\+over\+\_\+img (\begin{DoxyParamCaption}\item[{\hyperlink{structSprite}{Sprite} $\ast$}]{sprite }\end{DoxyParamCaption})}



Checks if the mouse is over a given image. 


\begin{DoxyParams}{Parameters}
{\em sprite} & -\/ pointer to the sprite containg the information of the image \\
\hline
\end{DoxyParams}
\begin{DoxyReturn}{Returns}
true -\/ if the mouse is over the given image 

false -\/ if the mouse is not over the given image 
\end{DoxyReturn}
Here is the call graph for this function\+:
\nopagebreak
\begin{figure}[H]
\begin{center}
\leavevmode
\includegraphics[width=312pt]{mouse_8h_a1d896c3172a19ca6777d49723c641c75_cgraph}
\end{center}
\end{figure}
\mbox{\Hypertarget{mouse_8h_a8f2981a74d75d33c2e4bec9a93314711}\label{mouse_8h_a8f2981a74d75d33c2e4bec9a93314711}} 
\index{mouse.\+h@{mouse.\+h}!mouse\+\_\+send\+\_\+command@{mouse\+\_\+send\+\_\+command}}
\index{mouse\+\_\+send\+\_\+command@{mouse\+\_\+send\+\_\+command}!mouse.\+h@{mouse.\+h}}
\subsubsection{\texorpdfstring{mouse\+\_\+send\+\_\+command()}{mouse\_send\_command()}}
{\footnotesize\ttfamily int mouse\+\_\+send\+\_\+command (\begin{DoxyParamCaption}\item[{uint8\+\_\+t}]{command }\end{DoxyParamCaption})}



Sends a command to the mouse controller. 


\begin{DoxyParams}{Parameters}
{\em command} & -\/ command to be sent \\
\hline
\end{DoxyParams}
\begin{DoxyReturn}{Returns}
int -\/ 0 if sucess or 1 if error 
\end{DoxyReturn}
Here is the call graph for this function\+:
\nopagebreak
\begin{figure}[H]
\begin{center}
\leavevmode
\includegraphics[width=350pt]{mouse_8h_a8f2981a74d75d33c2e4bec9a93314711_cgraph}
\end{center}
\end{figure}
\mbox{\Hypertarget{mouse_8h_a45dc77b0600161f8d821d5e758aa8d88}\label{mouse_8h_a45dc77b0600161f8d821d5e758aa8d88}} 
\index{mouse.\+h@{mouse.\+h}!mouse\+\_\+subscribe@{mouse\+\_\+subscribe}}
\index{mouse\+\_\+subscribe@{mouse\+\_\+subscribe}!mouse.\+h@{mouse.\+h}}
\subsubsection{\texorpdfstring{mouse\+\_\+subscribe()}{mouse\_subscribe()}}
{\footnotesize\ttfamily int mouse\+\_\+subscribe (\begin{DoxyParamCaption}\item[{uint8\+\_\+t $\ast$}]{bit\+\_\+no }\end{DoxyParamCaption})}



Subscribe the interrupts of the mouse. 


\begin{DoxyParams}{Parameters}
{\em bit\+\_\+no} & -\/ bit number of the mouse \\
\hline
\end{DoxyParams}
\begin{DoxyReturn}{Returns}
int -\/ 0 if success or 1 if error 
\end{DoxyReturn}
\mbox{\Hypertarget{mouse_8h_abb62339e13d96f9050f69a71428f8eb9}\label{mouse_8h_abb62339e13d96f9050f69a71428f8eb9}} 
\index{mouse.\+h@{mouse.\+h}!mouse\+\_\+unsubscribe@{mouse\+\_\+unsubscribe}}
\index{mouse\+\_\+unsubscribe@{mouse\+\_\+unsubscribe}!mouse.\+h@{mouse.\+h}}
\subsubsection{\texorpdfstring{mouse\+\_\+unsubscribe()}{mouse\_unsubscribe()}}
{\footnotesize\ttfamily int mouse\+\_\+unsubscribe (\begin{DoxyParamCaption}{ }\end{DoxyParamCaption})}



Unsubscribe the interrupts of the mouse. 


\begin{DoxyParams}{Parameters}
{\em bit\+\_\+no} & -\/ bit number of the mouse \\
\hline
\end{DoxyParams}
\begin{DoxyReturn}{Returns}
int -\/ 0 if success or 1 if error 
\end{DoxyReturn}
\mbox{\Hypertarget{mouse_8h_acbc1b5c21b7dfa3f4bde746667b3b3b2}\label{mouse_8h_acbc1b5c21b7dfa3f4bde746667b3b3b2}} 
\index{mouse.\+h@{mouse.\+h}!packet\+\_\+byte\+\_\+handler@{packet\+\_\+byte\+\_\+handler}}
\index{packet\+\_\+byte\+\_\+handler@{packet\+\_\+byte\+\_\+handler}!mouse.\+h@{mouse.\+h}}
\subsubsection{\texorpdfstring{packet\+\_\+byte\+\_\+handler()}{packet\_byte\_handler()}}
{\footnotesize\ttfamily void packet\+\_\+byte\+\_\+handler (\begin{DoxyParamCaption}\item[{int $\ast$}]{position,  }\item[{uint8\+\_\+t}]{bytes\mbox{[}3\mbox{]} }\end{DoxyParamCaption})}



Saves the byte received from the mouse into an array of bytes. 


\begin{DoxyParams}{Parameters}
{\em position} & -\/ index of the array to save the byte \\
\hline
{\em bytes} & -\/ array to save the byte in \\
\hline
\end{DoxyParams}
\mbox{\Hypertarget{mouse_8h_aed5e0cdccd09938aab783602cb657331}\label{mouse_8h_aed5e0cdccd09938aab783602cb657331}} 
\index{mouse.\+h@{mouse.\+h}!packet\+\_\+handler@{packet\+\_\+handler}}
\index{packet\+\_\+handler@{packet\+\_\+handler}!mouse.\+h@{mouse.\+h}}
\subsubsection{\texorpdfstring{packet\+\_\+handler()}{packet\_handler()}}
{\footnotesize\ttfamily void packet\+\_\+handler (\begin{DoxyParamCaption}\item[{struct packet $\ast$}]{pp,  }\item[{uint8\+\_\+t}]{packet\mbox{[}3\mbox{]} }\end{DoxyParamCaption})}



Saves the informatin of a packet sent by the mouse into a struct. 


\begin{DoxyParams}{Parameters}
{\em pp} & -\/ struct to save the information of the packet \\
\hline
{\em packet} & -\/ array containg the 3 bytes of the packet \\
\hline
\end{DoxyParams}
\mbox{\Hypertarget{mouse_8h_a0706b44aae98189c8b9330d8c259cdd6}\label{mouse_8h_a0706b44aae98189c8b9330d8c259cdd6}} 
\index{mouse.\+h@{mouse.\+h}!reset\+\_\+\+K\+B\+C\+\_\+command\+\_\+byte@{reset\+\_\+\+K\+B\+C\+\_\+command\+\_\+byte}}
\index{reset\+\_\+\+K\+B\+C\+\_\+command\+\_\+byte@{reset\+\_\+\+K\+B\+C\+\_\+command\+\_\+byte}!mouse.\+h@{mouse.\+h}}
\subsubsection{\texorpdfstring{reset\+\_\+\+K\+B\+C\+\_\+command\+\_\+byte()}{reset\_KBC\_command\_byte()}}
{\footnotesize\ttfamily int reset\+\_\+\+K\+B\+C\+\_\+command\+\_\+byte (\begin{DoxyParamCaption}\item[{uint8\+\_\+t}]{byte }\end{DoxyParamCaption})}



Resets the controller command byte. 


\begin{DoxyParams}{Parameters}
{\em byte} & -\/ byte to send to the controller \\
\hline
\end{DoxyParams}
\begin{DoxyReturn}{Returns}
int -\/ 0 if sucess of 1 if error 
\end{DoxyReturn}
Here is the call graph for this function\+:
\nopagebreak
\begin{figure}[H]
\begin{center}
\leavevmode
\includegraphics[width=350pt]{mouse_8h_a0706b44aae98189c8b9330d8c259cdd6_cgraph}
\end{center}
\end{figure}
\mbox{\Hypertarget{mouse_8h_ac0d90e1b25f00bb1969e4966e265e03d}\label{mouse_8h_ac0d90e1b25f00bb1969e4966e265e03d}} 
\index{mouse.\+h@{mouse.\+h}!update\+\_\+mouse\+\_\+position@{update\+\_\+mouse\+\_\+position}}
\index{update\+\_\+mouse\+\_\+position@{update\+\_\+mouse\+\_\+position}!mouse.\+h@{mouse.\+h}}
\subsubsection{\texorpdfstring{update\+\_\+mouse\+\_\+position()}{update\_mouse\_position()}}
{\footnotesize\ttfamily void update\+\_\+mouse\+\_\+position (\begin{DoxyParamCaption}\item[{struct packet}]{pp }\end{DoxyParamCaption})}



updates the mouse position based on the information received 


\begin{DoxyParams}{Parameters}
{\em pp} & -\/ struct containing the information sent be the mouse \\
\hline
\end{DoxyParams}
Here is the call graph for this function\+:
\nopagebreak
\begin{figure}[H]
\begin{center}
\leavevmode
\includegraphics[width=340pt]{mouse_8h_ac0d90e1b25f00bb1969e4966e265e03d_cgraph}
\end{center}
\end{figure}
